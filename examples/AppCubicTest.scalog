object AppCubicTest{
        prolog[app(L1:List[Int],L2:List[Int]):List[Int] => append(L1,R1,L2), 
		append(L1:List[String],L2:List[String]):List[String] => append(L1,L2,R), 
		cubic(L1:Int):Int => cubicRoot(L1,R1)]{
		
		append([],X,X).
		append([H|T],X,[H|Rest]) :- append(T,X,Rest).

           	cubicRoot(1,1).
		cubicRoot(X,E) :- X > 0, cubicRootAcc(X,X,E).
		cubicRootAcc(X,K,K) :- X >= K*K*K, !.
		cubicRootAcc(X,K,E) :- K2 is K - 1, cubicRootAcc(X,K2,E).
        }

        def main(args:Array[String]){
		println(app(List(1,2,3),List(1,2,3,4,5,6)))
                println(append(List("f","o","o"),List("b","a","r")))
                println(cubic(27))
        }
}
